#-*- coding:utf-8 -*-

#==========================
# 答案编写者：lixuefei8916
#==========================

print u"输入a,b,c三个值，输出其最大者；"

a = raw_input("Please input a: ")
b = raw_input("Please input b: ")
c = raw_input("Please input c: ")

if a>b:
	if a>c:
		print a
	else:
		print c
else:
	if b>c:
		print b
	else:
		print c

#=========================================

print u"2.	求 1x2x3x4x5"
p = 1   	#乘数
i = 2 		#被乘数
for i in range(1,6):
	x = p
	p = p*i
	print "%s * %s = %s" %(x,i,p)
	i = i+1
print p


#=========================================

print u"3.	求 1x3x5x7x9x11"
p = 1   	#乘数
i = 3 		#被乘数
while True:
	if i > 11:
		break
	else:
		x = p
		p = p*i
		print "%s * %s = %s" %(x,i,p)
		i = i+2
print p

#=========================================

print u"4.判定 2000 – 2500 年中 的每一年是否为闰年，如1996/2008/2012/2048是闰年"
year = 2000
while True:
	if year > 2501:
		break
	else:
		if (year%4==0 and year%100!=0) or year%400==0 :
			print "This is leap year %s" %year
			year = year+1
		else:
			year = year+1
			

#=========================================

print u"3.	求 1 - 1/2 + 1/3 - 1/4 + ... + 1/99 - 1/100"


#=========================================

6.	有两个瓶子A和B，分别盛放醋和酱油，要求将他们互换（即A瓶原来装醋，现在改装酱油，B瓶则相反）
A = "cu"
B = "Jiang You"
c = ""

C = A
A = ''

A = B
B = ''

B = C
C = ''
print "%s , %s , %s" %(A,B,C)

#=========================================


7.	依次将10个数输入，要求输出其中最大的数
a = ['10','2222','774','2','6','23','223','67','444444']
max = 0
for i in a:
	if max<int(i):
		max = int(i)
	else:
		pass
print "The max is %s" %int(max)


#=========================================

print u"6. 给出 一个大于或等于3的正整数，判断它是不是一个素数"
number = 17
i = 2

while True:
	if i>=number:
		break
	else:
		if number%i == 0:
			print "%s is not su shu" %number
			break
		else:
			i = i+1
			print "now i is %s" %i


#=========================================

8.	有2个数a,b,，要求按大小顺序把他们输出

a = ['2','3','4']
b = []
i = 0
if a[i]<a[i+1]:
	b.append(a[i+1])
	b.append(a[i])
		print b

#=========================================

9.	有3个数a,b,c，要求按大小顺序把他们输出
#很没效率的方法
#说明 x是个列表， 把x[0]和列表中每一个对比下大小，如果遇到比他小的，则把自己和它调换位置（小的挪前面，大的挪后面）；
#然后以同样的方式开始对比 x[1]
a = 220
b = 30
c = 40
x = []
x.append(a)
x.append(b)
x.append(c)

#x = ['55','26','34','17','66','3','36','105','999','1']
i = 0
while True:
	if x[i] == x[-1]:
		break
	else:
		i=0
		while i < len(x):
			j = 0
			while j < len(x):
				if int(x[i])<int(x[j]):
					print "Now is x[%s] = %s" %(i,x[i])
					print "x[%s]=%s < x[%s]=%s" %(i,x[i],j,x[j])
					print u'正在交换位置！！'
					tmp1 = int(x[i])
					tmp2 = int(x[j])
					x[j] = int(tmp1)
					x[i] = int(tmp2)
					print u'交换后为  %s' %x
					print "----------------"
				else:
					print "Now is x[%s] = %s" %(i,x[i])
					print "x[%s]=%s > x[%s]=%s" %(i,x[i],j,x[j])
					print u'无需交换位置'
					print u'当前列表顺序  %s' %x
					print "----------------"
					pass
				j = j+1
			i = i+1
		i = i+1
		
#=========================================

10.	求 1+2+3+…+100
def sum():
	i = 1
	y = 0
	while i < 100:
		tmp = y
		y = y+i
		i = i+1
		print "y(%s) = y(%s) + i(%s)" %(y,tmp,i)
	print '==== i = %s ' %i
sum()
	
#=========================================

11.	判断一个数n能否同时被3和5整除
def lxf():
	x = 30
	if x%3==0 and x%5==0:
		print u"可以被3和5同时整除"
	else:
		print 'no'
lxf()

#=========================================

12.	将100~200之间的素数输出
def lxf():
	i = 100
	j = 2
	while i < 200:	
		# i是要求的数段 100 - 200之间
		j = 2  		
		# j的计数是 逐渐加1的，直到比i小1，比如 101/2,101/3..101/100
		while j < i:
			if i%j==0:
				break 	
				#如果 100/2 余数是0，则直接跳出循环，不用计算100/3了，直接算101
			else:
				if j==(i-1): 
					#此时，如果 j(101) = i(100)+1 ,则说明中间没有其他数可以将他们整除
					print "%s is Yes" %i
				pass	
				# pass 是给 100/3 余1， 当接下来1个循环就是 100/4了
			j = j+1
		i = i+1
lxf()

# 答案：101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199

#=========================================

13.	求两个数 m和n的最大公约数
x = 24
y = 60

if x>y:
	tmp = y
else:
	tmp = x
# 首先找出 x和y谁小， x小就用x除，如果除不尽，就x-1，x-2,x-3继续除

def lxf():
	i = tmp
	while i>0:
		if x%i==0 and y%i==0:
			print u"最大公约数： %s" %i
			break
		else:
			pass
		i = i-1
lxf()

#=========================================

14.	求方程式 ax平方 + bx + c = 0 


#=========================================

15.	有人用温度计测量出用华氏法标示的问题（如65F），今要把它转化为以摄氏法标示的问题（如20C）
f = float(64.0)
def lxf(f):
	c = float((5.0/9)*(f-32))
	print u"华氏温度:%s , 摄氏温度:%s " %(c,f)
lxf(f)


#=========================================

16.	给定一个大写字母，要求用小写字母输出
【未实现， python的str和int很严格，未找到办法】

#=========================================


17.	假设我国国民生产总值的年增长率为9%，计算10年后我国国民生产总值与现在相比增长多少百分比。计算公式为 p = (1+r)n
def lxf():
	n = 10   #year
	r = 0.09
	p = pow(r+1.0,n)
	print p
lxf()

#=========================================

18.	存款利息的计算。有1000元，想存5年，可按以下5种办法存：
1）	一次存5年期；
2）	先存2年期，到期后将本息再存3年期
3）	先存3年期，到期后将本息再存2年期
4）	存1年期，到期后将本息再存1年期，连续存5此
5）	存活期。活期利息每一季度结算一次
2007年12月的银行存款利息如下
1年期定期存款利息为4.14%
2年期定期存款利息为4.68%
3年期定期存款利息为5.4%
5年期定期存款利息为 5.85%
活期存款利息为0.72%（1季度结算1次利息）

def lxf():
	P = 1000
	r5 = 0.0585
	r3 = 0.054
	r2 = 0.0468
	r1 = 0.0414
	r0 = 0.0072

	p1 = P*((1+r5)*5)
	p2 = P*(1+2*r2)*(1+3*r3)
	p3 = P*(1+3*r3)*(1+2*r2)

	print p1
	print p2
	print p3

lxf()

#==========================================

19.	解 的方程根，由键盘输入a,b,c。假设a,b,c的值任意，并不保证 。需要在程序中进行判别 ，如果 ，就计算并输出方程的两个实根，如果 ，就输出“方程无实根”。
import math
a = 2
b = 4
c = 1
def lxf(a,b,c):
	disc = b*b-4*a*c
	if disc < 0:
		print "No"
	else:
		p = b/(2.0*a);
		q = math.sqrt(disc)/(2.0*a)
		x1 = p+q;x2=p-q
		print "real roots:\n x1=%s x2=%s" %(x1,x2)
lxf(a,b,c)

# a=6 b=3 c=1 结果是“无实根”；


#==========================================

20.	从键盘输入一个小于1000的正数，要求输出它的平方根（如平方根不是整数，则输出其整数部分）。要求在输入数据后先对其进行检查是否为小于1000的正数，若不是，则要求重新输入；
i = 100 #输入一个小于1000的正数
def lxf(i):
	if i>1000:
		print "i > 1000"
	else:
		k = math.sqrt(i)
		print k
lxf(i)

#==========================================

21.	函数，输入x后，输出y的值
x = -50

def lxf(x):
	if x<1:
		y = x
		print "y=x = %s" %y
	else:
		if x < 10:
			y = 2*x-1 
			print "y = 2*x-1 = %s" %y
		else:
			y = 3*x-11
			print "y=3*x-11 = %s" %y

lxf(x)

#=========================================

22.	给出一个百分制成绩，要求输出成绩等级A,B,C,D,E.90分以上为A，80-89分为B， 70-79分为C，60-69分为D，60分以下为E。

grade = 6

def lxf(grade):
	if grade<0 or grade > 100:
		print "Error"
	elif 90<grade<99:
		print "A"
	elif 80<grade<89:
		print "B"
	elif 70<grade<79:
		print "C"
	elif 60<grade<69:
		print "D"
	elif 0<grade<59:
		print "E"
lxf(grade)

#=========================================

23.	给一个不多于5位的正整数，要求：
A 求出它是几位数
B 分别输出每一位数字
C 按逆序输出各位数字，例如原数为321，应输出123

x = 974

def lxf(x):
	if 0<x<9:
		print "1 W"
		index = 0
	elif 10<x<99:
		print "2 W"
		index = 1
	elif 100 < x < 999:
		print "3 W"
		index = 2
	elif 1000<x<9999:
		print "4 W"
		index = 3
	else:
		print "> 5M"
		exdex = 4

	ten_thousand = x/10000
	thousand=int((x-ten_thousand*10000)/1000)
	hundred=int((x-ten_thousand*10000-thousand*1000))/100
	ten=int((x-ten_thousand*10000-thousand*1000-hundred*100))/10;
	indiv=int((x-ten_thousand*10000-thousand*1000-hundred*100-ten*10));

	print "ten_thousand = %s" %ten_thousand
	print "thousand = %s" %thousand
	print "hundred= %s" %hundred
	print "ten = %s" %ten
	print "indiv = %s" %indiv

	if index == 0:
		print "Ni %s" %(indiv)
	elif index == 1:
		print "Ni %s%s" %(indiv,ten)
	elif index == 2:
		print "Ni %s%s%s" %(indiv,ten,hundred)	
	elif index == 3:
		print "Ni %s%s%s%s" %(indiv,ten,hundred,thousand)
	elif index ==4:
		print "Ni %s%s%s%s%s" %(indiv,ten,hundred,thousand,ten_thousand)	

lxf(x)

#=========================================

24.	企业发放的奖金根据利润提成。利润低于或等于100000元的，奖金可提10%;
利润高于100000元，低于200000元（100000<I≤200000）时，低于100000元的部分按10％提成，高于100000元的部分，可提成 7.5%;
200000<I≤400000时，低于200000元部分仍按上述办法提成，（下同），高于200000元的部分按5％提成；
400000<I≤600000元时，高于400000元的部分按3％提成；600000<I≤1000000时，高于600000元的部分按1.5%提成；
I>1000000时，超过1000000元的部分按1%提成。从键盘输入当月利润I,求应发奖金总数。

【未答】

#=========================================

25.	有4个圆塔,圆心分别为(2,2),(-2,2),(-2,-2),(2,-2),圆心半径为1,这4个塔的高度为10M,塔外无建筑物.输入任一点坐标,求该点的高度.

【答案不正确】

x = 2 	#坐标 x点
y = 2 	#坐标 y点

def lxf(x,y):
	h = int(10)
	x1 = 2
	y1 = 2
	x2 = -2
	y2 = 2
	x3 = -2
	y3 = -2
	x4 = 2
	y4 = -2

	d1 = (x-x4)*(x-x4)+(y-y4)*(y-y4)
	d2 = (x-x1)*(x-x2)+(y-y1)*(y-y1)
	d3 = (x-x2)*(x-x2)+(y-y2)*(y-y2)
	d4 = (x-x3)*(x-x3)+(y-y3)*(y-y3)

	if d1>1 and d2>1 and d3>1 and d4>1:
		print "h = 0"
lxf(x,y)


#=========================================

26.	输出以下 4x5的矩阵（P148）


#=========================================

27.	求 π 的近似值

sign = 1 					# 数值的符号
pi = float(0.0) 			# pi代表pi的值
n = float(1.0)  			# n代表分母
term = float(1.0)  			# term 当前项的值

while abs(term) >= 0.00001: 			# 判断term的绝对值是否大于 0.000001
	print "------------------------------"
	print "1. term = %s" %term
	x = pi
	print "2. pi = %s" %pi
	pi = float(pi+term) 	# 把当前项累加到pi中
	print "3. pi = %s + %s = %s" %(pi,x,term)
	n = float(n+2) 			# n+2是下一项的分母
	print "4. n = %s" %n
	sign = float(-sign) 	# sign代表符号，下一项的符号与上一项符号相反
	print "5. sign=%s" %(sign)
	term = float(sign/n) 	# 求出下一项的值 term
	print "6. term = %s / %s = %s" %(sign,n,term)  # (- 1/3) | + 1/5 | - 1/7

pi = float(pi*4)
print "pi = %s*4 \n" %float(pi)


#=========================================

28.	求Fibonacci数列的前40个数。这个数列有如下特点；第1,2两个数为1,1.从第3个数开始，该数是其前面两个数之和。
（这是一个有趣的古典数学问题：有一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又出生一对兔子。假设所有兔子都不死，问每个月的兔子总数为多少？）

def lxf():
	f1 = 1
	f2 = 1
	print "f1 = %s" %f1
	print "f2 = %s" %f2
	i = 1
	while i<=10:
		f3 = f1 + f2
		print "f3 = %s" %f3
		f1 = f2
		f2 = f3
		i = i+1
lxf()

#=========================================

29.	输入一个大于3的整数n，判断它是否为素数（质数）

x = 19
i = 2

while i<=(x-1):
	if (x)%i == 0:
		print "Break"
		break
	print "Now i = %s " %i
	i = i+1
if i == (x):
	print "%s is a preime number." %x
else:
	print "%s is not a preime number" %x
			pass

#=========================================

30.	译密码。为使电文保密，往往按一定规律将其转换成密码,收报人再按约定的规律将其译回原文。（P158）
【python 无法 char+4】

#=========================================

31.	输入一行字符，分别统计出其中英文字母、空格、数字和其他字符的个数；

x = 'a38dfg93#!@#$%^&*()1234567890'

digit = 0 	#数字 的计数器
alpha = 0 	#字母 的计数器
Special_character = 0 	#特殊字符 的计数器

digit_lit = []
alpha_lit = []
Special_character_lit = []

for i in x:
	if i.isdigit() == True:
		digit = digit + 1
		digit_lit.append(i)
	elif i.isalpha() == True:
		alpha = alpha + 1
		alpha_lit.append(i)
	else:
		Special_character = Special_character + 1
		Special_character_lit.append(i)

print "str has %s" %digit
print digit_lit
print "num has %s" %alpha
print digit_lit
print "num has %s" %alpha

#=========================================

32.	求 S = a + aa + aaa + … + aa..a；
例如 2 + 22 + 222 + 22222 (n=5)

s = 2
n = 5

def sum(s,n):
	now = s 	# now = now + xxx  自累积 
	next=s 		# next 是  2 ，22 ， 222 ， 2222  直至n个2
	i=0 		# 循环的计数器 ，直到循环  n次，也就是 n个2
	while i<n:
		next = next*10+2
		print "--------------------"
		print "next is %s" %next
		old_now = now
		now = now + next
		print "Now = %s + %s = %s" %(old_now,next,now)
		i = i+1
sum(s,n)

#=========================================

33.	求1！ + 2！ + 3！ + 4！ + … 20！

x= 20
def lxf(x):
	i = 1
	now = 0
	while i<x:
		print "--------------"
		old_now = now
		now = now + i*i
		print "now = %s + %s*%s = %s" %(old_now,i,i,now)
		i = i+1
lxf(x)

#=========================================

34.	输出所有的“水仙花数”，所谓“水仙花数”是指一个3位数，其各位数字立方和等于该数本身，例如153是一个水仙花数，因为153=13+53+33

i = 100
while i < 1000:
	b = i / 100
	s = i/10-b*10
	g = i%10

	if i==b*b*b+s*s*s+g*g*g:
		print "%d" %i
	i = i+1
	
#=========================================

35.	一个数如果恰好等于它的因子之和，这个数就称为“完数”。例如，6的因子为1,2,3，而6=1+2+3，因此6是“完数”。编程序找出1000之内的所有完数，并按下面格式输出其因子： 6 its factors are 1,2,3
# 因子就是所有可以整除这个数的数,不包括这个数自身 28=1+2+4+7+14

i = 3 #求数  |  j是除数

def yinzi(i):
	Yinzi = []
	j = 1  # 被除数
	while j < i-1:
		if i%j == 0:
			Yinzi.append(j)
			j = j+1
		else:
			j = j+1
	i = i+1
	return Yinzi

def wanshu(i,Yinzi):
	sum_yinzi = sum(Yinzi)
	if i == sum(Yinzi):
		print "%s -- Yes " %i
		print u"%s 的因子%s之和== %s " %(i,Yinzi,sum_yinzi)
while i < 1000:
	wanshu(i,yinzi(i))
	i = i+1

#=========================================

36.	有一个份数序列

fenzi = 1
fenmu = 1
Time = 1

last_last_fenmu = 0
last_fenmu = 0

last_last_fenzi = 1
last_fenzi = 1

sum_a = []

while Time < 7:
	print "-----------------------"
	last_fenmu = fenmu 
	fenmu = last_last_fenmu + last_fenmu 

	last_fenzi = fenzi
	fenzi = last_last_fenzi + last_fenzi

	tmp = fenzi / float(fenmu)
	print "%s = %s / %s" %(tmp,fenzi,fenmu)
	sum_a.append(tmp)

	last_last_fenmu = last_fenmu 
	last_last_fenzi = last_fenzi 	
	Time = Time + 1

#=========================================

37.	一个球从100m高度自由落下，每次落地后反跳回原高度的一半，再落下，再反弹。求它在第10此落地时，共经过多少米，第10此反弹多高。

high = 100

Time = 1

sum_a = 0

while Time < 10:
	fantan = float(high) / 2
	sum_a = sum_a + high + fantan
	high = fantan
	print u"第%s次: %s %s" %(Time,sum_a,fantan)
	print "------------------"
	
	Time = Time + 1

#========================================

38.	猴子吃桃问题。猴子第一天摘下若干桃子，当即吃了一半，还不过瘾，又多吃了一个。第二天又将剩下的吃了一半又多吃了一个，以后每天早上都吃了前一天剩下的一半零一个。到第10天早上再想吃时，就剩下一个桃子了。求第一天共摘了多少个桃子？

day = 0
number = 1

while day<9:
	number = (number + 1) * 2
	print "-------"
	print number
			day = day + 1

#=======================================

42.	求出以图案

n = 5	# 最大6格
i = 1
while i < n:
	j = 1
	while j<n+1-i:   #|5+1-1| |5+1-2| 5+1-3 | 5+1-4 | 5+1-5
		print " ",
		j = j+1

	k = 0
	while k<2*i-1:   #|2*1-1| 2*2-1 | 2*3-1 | 2*4-1
		print "*",
		k = k+1 
	i = i+1
	print "\n"
i = 1
while  i<=n-1:
	j = 1
	while j<i+1:
		print " ",
		j = j+1

	k = 0
	while k<2*(n-i)-1:
		print "*",
		k = k+1

	print "\n"
	i = i+1

#=======================================

43.	两个乒乓球队进行比赛，各出3人。甲队为A,B,C 3人 ，乙队为XYZ3人。已抽签决定比扫名单。有人向队员大厅比赛的名单，A说他不和X比，C说他不和X,Z比，请编程序找出3对赛手的名单。
【str 不能 + number，即不能 x+1 = y , x+2=z】


#=======================================

44.	对10个数组元素一次赋值为0,1,2,3,4,5,6,7,8,9，要求按逆序输出
a = []
i = 0
while i < 10: 		#正序 加2列表
	a.append(i)
	i = i+1
j = 9
while j > -1:
	print 'a[%s] = %s' %(j,a[j]) 	# 倒叙 输出
	j = j-1

#=======================================

45.	用数组来处理求Fibonacci数列问题

f = [1,1]
i = 2
while i<20:
	tmp = f[i-2] + f[i-1]
	f.append(tmp)
	i = i+1

i = 0
while i<20:
	if i%5==0:
		print "\n"
	print f[i],
	i = i+1
print "\n"
print "f = %s" %f

#=======================================

print u'46.	有10个地区的面积，要求对他们按由小到达的顺序排列【排序】'

a = ['23','33','2','66','45','4','9','24']

j = 0
while j < len(a):
	i = 0
	while i<len(a)-1-j:
		print "----------------------"
		print "Now j = %s" %j
		print "Now i = %s" %i
		if int(a[i])>int(a[i+1]):
			print "%s > %s ,so cange it" %(a[i],a[i+1])
			t = int(a[i])
			a[i] = int(a[i+1])
			a[i+1] = int(t)
			print "Zhen a[%s]" %a
		else:
			print "%s < %s ,so no change" %(a[i],a[i+1])			
			print "Zhen a[%s]" %a
			pass			
		i = i+1
	j = j+1
print a			
			
#=======================================

47.	将一个二维数组行和列的元组互换，存到另一个二维数组中
a = [['1','2','3'],['4','5','6']]
#最终效果 b = [['1','4'],['2','5'],['3','6']]
b = [None]

i = 0
while i <= len(a):
	j = 0
	while j <= len(a[0]):
		b[j][i] = a[i][j]
		j = j+1
	i = i+1

print a
print b

#=======================================

48.	有一个3X4的矩阵，要求编程序求出其中值最大的那个元素的值，以及其所在的行号和列号；

a = [[1,2,3,4],[9,8,7,6],[-10,10,-5,2]]
max = a[0][0]
i = 0
while i < len(a):
	j = 0
	while j < len(a[0]):
		if a[i][j] > max:
			max = a[i][j]

		j = j+1
	i = i+1
print "max = %s" %max


#=======================================

49.	输出一个菱形图
    *

  *   *

*       *

  *   *

*

diamond = [[' ',' ','*',' ',' ',],[' ','*',' ','*',' ',],['*',' ',' ',' ','*'],[' ','*',' ','*',' ',],[' ',' ','*',' ',' ']]
i = 0
while i<len(diamond):
	j = 0
	while j<5:
		print diamond[i][j],
		j = j+1
	print '\n'	
	i = i+1


#=======================================

50.	输入一行字符，统计其中有多少个单词，单词之间用空格分隔开
string = 'python and lixuefei'

i = 0
word = 1
while i < len(string):
	if string[i] == ' ':
		word = word + 1
	i = i + 1
print "There are %s words in this line" %word


#=======================================

print u'51.	用筛选法求100之内的素数'
# 素数 ： 除了1和它本身以外不再被其他的除数整除
# del删除元素方法 ， 如果是 b.append，不知道怎么跳出2层循环

a = range(101)
b = a
i = 0 	# 0 - 100个数
while i < 101:
	j = 2 	#除数： 2 - 被除数本身
	while j < i:
		if i%j == 0:
			b.remove(i)
			break
		j = j+1
	i = i+1
print b
	
#=======================================

52.	用选择法对10个整数排序


a = ['23','33','2','66','45','4','9','24']

j = 0
while j < len(a):
	i = 0
	while i<len(a)-1-j:
		print "----------------------"
		print "Now j = %s" %j
		print "Now i = %s" %i
		if int(a[i])>int(a[i+1]):
			print "%s > %s ,so cange it" %(a[i],a[i+1])
			t = int(a[i])
			a[i] = int(a[i+1])
			a[i+1] = int(t)
			print "Zhen a[%s]" %a
		else:
			print "%s < %s ,so no change" %(a[i],a[i+1])			
			print "Zhen a[%s]" %a
			pass
		i = i+1
	j = j+1
print a

#=======================================

53.	求一个3x3的整型矩阵对角线元素之和

sum_ = 0
a = [[1,2,3],[4,5,6],[7,8,9]]
i = 0 
while i < len(a):
	j = 0
	while j < len(a[0]):
		old_sum = sum_
		sum_ = sum_ + a[i][j]
		print "%s(sum) = %s + %s(a[%s][%s]) " %(sum_,old_sum,a[i][j],i,j)
		j = j+1 
	i = i+1



#=======================================

54.	有一个已排好的数组，要求输入一个数后，按原来排序的规律将它插入数组中；

a= [1,3,7,24,75,87,98]
b = 95
i = 0
while i < len(a):
	if a[i]<b and b<a[i+1]:
		print "-------------------------"
		print "a[i]:%s < b:%s < a[i+1]:%s "%(a[i],b,a[i+1])
		a.insert(i,b)
		break
	else:
		print "---------------------"
		print "a[i]:%s < a[i+1]:%s < b:%s " %(a[i],a[i+1],b)
		pass
	i = i+1
print a

#=======================================

print u'55.	有一个数组中的值按逆序重新存放，例如，原来顺序为8,6,5,4,1。要求改为1,4,5,6,8'
#a = [79,77,23,12,8,6,5,4,1]
a = [1,6,8,12,15,27,47,68,99]

i = 0
while i < len(a)/2:
	tmp = a[len(a)-i-1]
	a[len(a)-i-1] = a[i]
	a[i] = tmp
	i = i+1
print a

#=======================================

56.	输出以下的杨辉三角形（要求输出10行）
【不会】

#=======================================

57.	输出“魔方阵”。所谓魔方阵是指这样的方阵，它的每一行、每一列和对角线之和均相等。例如，三阶魔方阵为
8	1	6
3	5	7
4	9	2
	【待求解】

#=======================================

58.	找出一个二维数组中的鞍点，即该位置上的元素在该行上最大、在该列上最小。也可能没有鞍点。

a = [[91,60,87,79,69],[20,2,6,53,77],[23,25,64,73,1],[56,22,15,60,23]]
i = 0

max_list = []
min_list = []
# 先求出每行 最大 和 最小值
while i < len(a):
	j = 0
	max_ = a[i][0] 		#假设 a[i][0] 是最大 
	min_ = a[i][0]		#假设 a[i][0] 是最小 
	while j < len(a[i]):
		if max_ < a[i][j]:
			max_ = a[i][j]
		elif max_ == a[i][j]:
			pass
		elif min_ == a[i][j]:
			pass
		elif min_ > a[i][j]:
			min_ = a[i][j] 
		j = j+1
	print "a[%s] Max = %s  ;  a[%s] Min = %s" %(i,max_,i,min_)
	max_list.append(max_)
	min_list.append(min_)
	i = i+1



