# Tushare的学习笔记，理解和扩展里面的代码，但没有实际使用、应用代码部分；
import tushare as ts

#-----------------------------------------------------
通用的地方
1. Tushare里获取的数值都是 Unicode类型，需要通过 str(数值的变量)来转换一下
2. Stock只给了MA5 20日均线，需要自定义就得自己写代码，这里有，详情请见 一、自写MA5代码 与 sh['ma5']的对比



#-----------------------------------------------------
# 一、自写MA5代码 与 sh['ma5']的对比

# Tushare自带的MA5数据 （5日均线）
sh = ts.get_hist_data(stock_name)
print "tushare  MA5 = %s" %sh['ma5'][0]

# LxF自写MA5数据（5日均线）
day_i = 0
sh_count = 0
MA_x = 250
while day_i < MA_x:
	sh_count = sh_count + sh['close'][day_i] 
	day_i = day_i + 1
sh_year_MA250 = sh_count/MA_x
#print "lxf MA%s=%s" %(MA_x,sh_year_MA250)

#运行结果
#tushare  MA5 = 3061.742
#lxf MA5=3061.742
#为何重复造轮子呢？ 因为Tushare只给了MA5和20，我想自己写半年线和年线；
#【所以如果想写年线， 就把 MA_x = 250 即可】

#-----------------------------------------------------


#-----------------------------------------------------
# 二、 判断是否上攻年线(MA250)
bull_market = 0 	#牛市开关，0为非牛市，1为牛市

# 昨日-收盘价数据
sh = ts.get_hist_data(stock_name)
sh_yesterday_close = str(sh['close'][0])

# 当日-实时数据
sh = ts.get_realtime_quotes('sh')
sh_today_open = str(sh['open'][0])  #[0]：指获取大盘数值，其他辅助信息不显示，否则也无法计算；

#判断是否上攻年线(当日开盘价 > 年线 and 昨日收盘价 > 年线)
if sh_today_open > sh_year_MA250 and sh_yesterday_close > sh_year_MA250:
	print u"昨日收盘%s 和 开盘价%s > 年线%s "%(sh_yesterday_close,sh_today_open,sh_year_MA250)
	print u"已站稳年线"
	bull_market = 1
else:
	print u"昨日收盘%s 和 开盘价%s < 年线%s "%(sh_yesterday_close,sh_today_open,sh_year_MA250)
	print u"还未站稳年线"

#------------------------------------------------------
# 三、 自动化交易[日志],获取当前prince
stock = '600848'
sh = ts.get_realtime_quotes(stock)[['time','code','name','price']]
print u'买入  %s' %sh

#------------------------------------------------------
# 四、周线生命线

stock = 'sh'
lifeline_week_14 = 0  	#开关，0为不操作，1为操作

# # Tushare自带的周MA5数据 （5周均线）
sh_week_data = ts.get_hist_data(stock,ktype='W') #获取周k线数据
sh_week_ma5 = str(sh_week_data['ma5'][0])
print sh_week_ma5

# LxF自写周MA5数据（5周均线）
week_i = 0
sh_count = 0
MA_x = 5
while week_i < MA_x:
	sh_count = sh_count + sh_week_data['close'][week_i] 
	week_i = week_i + 1
sh_week_ma5_lxf = str(sh_count/MA_x)
print sh_week_ma5_lxf
#原理同 一、自写MA5代码 与 sh['ma5']的对比

